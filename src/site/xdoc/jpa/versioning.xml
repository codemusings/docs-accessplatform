<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>JPA Versioning</title>
    </properties>

    <body>
        <section name="JPA : Versioning">
            <p>
                JPA allows objects of classes to be versioned. The version is typically used as a way of
                detecting if the object has been updated by another thread or EntityManager since retrieval
                using the current EntityManager - for use by Optimistic Transactions.
            </p>

            <subsection name="Version Field/Property">
                <p>
                    JPAs mechanism for versioning of objects is to mark a field of the class to store the version. 
                    The field must be Integer/Long based.
                    With JPA you can specify the details of this <b>version field</b> as follows.
                </p>
<source><![CDATA[
<entity name="mydomain.User">
    <attributes>
        <id name="id"/>
        <version name="version"/>
    </attributes>
</entity>]]></source>
                <p>or alternatively using annotations</p>
<source><![CDATA[
@Entity
public class User
{
    @Id
    long id;

    @Version
    int version;

    ...
}]]></source>
                <p>
                    The specification above will use the "version" field for storing the version of the object. 
                    DataNucleus will use a "version-number" strategy for populating the value.
                </p>
            </subsection>

            <subsection name="Surrogate Version for Class">
                <img src="../images/nucleus_extension.gif" border="0" alt=""/>
                <p>
                    While the above mechanism should always be used for portability, DataNucleus also supports
                    a surrogate version for objects of a class. With this you don't have a particular field that
                    stores the version and instead DataNucleus persists the version in the datastore with the
                    field values in its own "column"
                    You do this as follows.
                </p>
<source><![CDATA[
import org.datanucleus.api.jpa.annotations.SurrogateVersion;

@Entity
@SurrogateVersion
public class User
{
    @Id
    long id;

    ...
}]]></source>
            </subsection>
        </section>

    </body>
</document>