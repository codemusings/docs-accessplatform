<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>JPA Overview</title>
    </properties>

    <body>
        <section name="Java Persistence API (JPA)">
            <p>
                JPA defines an interface to persist normal Java objects (or POJO's in some peoples terminology)
                to a datastore. JPA is tightly coupled to RDBMS datastores and so is currently of no use when you 
                require an alternative type of datastore (such as XML, OODBMS, etc). JPA is a <i>standard</i> 
                approved in June 2006 as part of "EJB3" though can be used outside of the JavaEE container. A later
                version (JPA2) was approved in December 2009.
                JPA defines the interface that an implementation has to implement.
                The whole point of having a <i>standard</i> interface is that users can, in principle, swap between
                implementations of JPA without changing their code.
            </p>
            <p>
                JPA has the following principal areas.
            </p>
            <ul>
                <li>The first thing you do with any JPA-enabled application is provide the 
                    <a href="class_mapping.html">Persistence Definition or Mapping</a></li>
                <li>Since JPA is oriented to RDBMS datastores only you now need to define the 
                    <a href="orm/index.html">Object-Relational Mapping (ORM)</a></li>
                <li>Now you are ready to utilise the <a href="api.html">JPA API</a> for persisting and retrieving 
                    your objects. This is performed using a <a href="emf.html">EntityManagerFactory</a>/
                    <a href="em.html">EntityManager</a>.
                    The persistence of Java objects results in changes to the lifecycle state of the objects.</li>
                <li><a href="query.html">Querying your objects</a> in the datastore.</li>
            </ul>
            <p>This release of DataNucleus AccessPlatform requires JPA2. There is currently no official version
                however there is an Apache 2 licensed version from Geronimo that included with AccessPlatform</p>
            <p><b>DataNucleus makes no use of the JPA2 TCK. This is because we have been prevented access to it
                by Oracle and the JCP, which is now nothing more than a charade. We do however use the JPA1 TCK to 
                check compatibility of every release.</b></p>
        </section>

    </body>
</document>