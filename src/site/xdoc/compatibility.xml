<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>Compatibility</title>
    </properties>

    <body>
        <section name="DataNucleus Compatibility">
            <p>
                DataNucleus provides various plugin jars and there is a certain amount of intercompatibility between jars required, both between DataNucleus plugins, and between
                DataNucleus plugins and third party jars required for correct operation.
            </p>

            <subsection name="DataNucleus Plugin interoperability">
                <p>
                    If you download one of the DataNucleus AccessPlatform distribution zip files you get a consistent set of DataNucleus plugins.
                    Alternatively you can inspect the Maven "POM" files in Maven Central repository to see the dependency requirements. For the record the latest
                    released versions of the following plugins are all consistent.
                </p>
<source>
datanucleus-core 5.0.7

datanucleus-api-jdo 5.0.7
datanucleus-api-jpa 5.0.7
datanucleus-api-rest 5.0.2

datanucleus-cassandra 5.0.2
datanucleus-excel 5.0.3
datanucleus-hbase 5.0.2
datanucleus-json 5.0.2
datanucleus-ldap 5.0.1
datanucleus-mongodb 5.0.2
datanucleus-neo4j 5.0.3
datanucleus-neodatis 5.0.0.release
datanucleus-odf 5.0.2
datanucleus-rdbms 5.0.7
datanucleus-xml 5.0.0.release

datanucleus-geospatial 5.0.2
datanucleus-jodatime 5.0.0.release
datanucleus-guava 5.0.1
datanucleus-cache 5.0.0.release

datanucleus-jdo-query 5.0.1
datanucleus-jpa-query 5.0.1

datanucleus-maven-plugin 5.0.2
datanucleus-eclipse-plugin 4.0.0.release
</source>
                <br/>
            </subsection>

            <a name="dependencies"/>
            <subsection name="DataNucleus Dependencies">
                <p>
                    DataNucleus utilises some third party software to provide some of its functionality. Dependent on how you intend to use this product you may have 
                    to also download some of these third party software packages. You can see below the dependencies and when they are required.
                </p>
                <table>
                <tr>
                    <th>Software</th>
                    <th>Description</th>
                    <th>Version</th>
                    <th>Requirement</th>
                </tr>
                <tr>
                    <td colspan="4"><b>Essential Dependencies</b></td>
                </tr>
                <tr>
                    <td><a href="http://db.apache.org/jdo/downloads.html" target="_blank">JDO API</a></td>
                    <td>JDO API definition, provided by DataNucleus</td>
                    <td>3.2</td>
                    <td>Required if you are using the JDO API or JDO Annotations. Since Apache JDO haven't yet released any jar for this
                        we provide our own milestone from the Apache JDO codebase</td>
                </tr>
                <tr>
                    <td><a href="http://central.maven.org/maven2/org/datanucleus/javax.persistence/2.1.1/" target="_blank">JPA API</a></td>
                    <td>JPA API definition</td>
                    <td>2.1.0+</td>
                    <td>Required if you are using the JPA API or JPA annotations. 
                        Note that the JPA "Expert Group" are seemingly too lazy to upload this into a freely downloadable
                        location so you have to use this one we prepared ourselves.</td>
                </tr>
                <tr>
                    <td colspan="4"><b>Datastore Dependencies (choose your datastore driver)</b></td>
                </tr>
                <tr>
                    <td><a href="http://www.neodatis.org" target="_blank">NeoDatis</a></td>
                    <td>NeoDatis object database</td>
                    <td>1.9.30</td>
                    <td>Required if you are using a NeoDatis datastore</td>
                </tr>
                <tr>
                    <td><a href="http://repo1.maven.org/maven2/javax/xml/bind/jaxb-api/2.1/" target="_blank">jaxb-api</a></td>
                    <td>JAXB API</td>
                    <td>2.1</td>
                    <td>Required is you are using an XML datastore</td>
                </tr>
                <tr>
                    <td><a href="http://repo1.maven.org/maven2/javax/xml/jaxb-impl/" target="_blank">jaxb-impl</a></td>
                    <td>JAXB Reference Implementation</td>
                    <td>2.x</td>
                    <td>Required if you are using an XML datastore</td>
                </tr>
                <tr>
                    <td>JDBC Driver</td>
                    <td>JDBC Driver for your chosen RDBMS</td>
                    <td></td>
                    <td>Required if you want to use an RDBMS datastore. Obtain from your RDBMS vendor</td>
                </tr>
                <tr>
                    <td><a href="http://poi.apache.org//" target="_blank">Apache POI</a></td>
                    <td>Apache library for writing to Microsoft documents</td>
                    <td>3.5+</td>
                    <td>Required if you want to use Excel (XLS/OOXML) documents</td>
                </tr>
                <tr>
                    <td><a href="http://odftoolkit.org" target="_blank">ODFDOM</a></td>
                    <td>ODF Toolkit for Java</td>
                    <td>0.8.7</td>
                    <td>Required if you want to use an ODF document for persistence.</td>
                </tr>
                <tr>
                    <td><a href="http://xerces.apache.org/" target="_blank">Xerces</a></td>
                    <td>Xerces XML parser</td>
                    <td>2.8+</td>
                    <td>Required if you want to use an ODF document for persistence. Required by ODFDOM</td>
                </tr>
                <tr>
                    <td><a href="http://hbase.apache.org/" target="_blank">Apache HBase</a></td>
                    <td>hbase-client</td>
                    <td>1.1+</td>
                    <td>Required if you want to persist to HBase datastores</td>
                </tr>
                <tr>
                    <td><a href="http://www.mongodb.org/" target="_blank">MongoDB Java driver</a></td>
                    <td>MongoDB Java driver</td>
                    <td>3.x</td>
                    <td>Required if you want to persist to MongoDB datastores</td>
                </tr>
                <tr>
                    <td><a href="http://docs.datastax.com/en/developer/java-driver/2.0" target="_blank">Cassandra Datastax Java driver</a></td>
                    <td>Cassandra Datastax driver</td>
                    <td>3.x</td>
                    <td>Required if you want to persist to Cassandra datastores</td>
                </tr>
                <tr>
                    <td><a href="http://www.neo4j.org/" target="_blank">Neo4j driver</a></td>
                    <td>Neo4j driver</td>
                    <td>2.3</td>
                    <td>Required if you want to persist to Neo4j datastores. v3.0 does work also</td>
                </tr>
                <tr>
                    <td colspan="4"><b>Feature Dependencies (optional depending on what you want to use)</b></td>
                </tr>
                <tr>
                    <td><a href="http://jakarta.apache.org/log4j/" target="_blank">Log4j</a></td>
                    <td>Log4J logging library.</td>
                    <td>1.2+</td>
                    <td>Required if you wish to log using Log4J. DataNucleus supports Log4J or JDK1.4 logging</td>
                </tr>
                <tr>
                    <td><a href="http://www.mx4j.org" target="_blank">mx4j</a></td>
                    <td>MX4J management library</td>
                    <td>3.0+</td>
                    <td>Required if you want to use JMX with DataNucleus via MX4J</td>
                </tr>
                <tr>
                    <td><a href="http://www.mx4j.org" target="_blank">mx4j-tools</a></td>
                    <td>MX4J tools</td>
                    <td>1.2+</td>
                    <td>Required if you want to use JMX with DataNucleus via MX4J</td>
                </tr>
                <tr>
                    <td><a href="http://www.sf.net/projects/joda-time/" target="_blank">JodaTime</a></td>
                    <td>JodaTime</td>
                    <td>2.0+</td>
                    <td>Required if you want to persist JodaTime java types</td>
                </tr>
                <tr>
                    <td>javax.time</td>
                    <td>JSR Time Library</td>
                    <td>1.0+</td>
                    <td>Required if you want to persist javax.time types</td>
                </tr>
                <tr>
                    <td><a href="http://code.google.com/p/google-collections/" target="_blank">GoogleCollections</a></td>
                    <td>GoogleCollections</td>
                    <td>1.0</td>
                    <td>Required if you want to persist Google Collections java types, 
                        or are using BoneCP connection pool for RDBMS</td>
                </tr>
                <tr>
                    <td><a href="http://repo1.maven.org/maven2/ehcache/jars/" target="_blank">EHCache</a></td>
                    <td>EHCache caching product</td>
                    <td>1.0+</td>
                    <td>Required if you want to use EHCache for level 2 caching</td>
                </tr>
                <tr>
                    <td><a href="http://repo1.maven.org/maven2/opensymphony/oscache/jars/" target="_blank">OSCache</a></td>
                    <td>OSCache caching product</td>
                    <td>2.1</td>
                    <td>Required if you want to use OSCache for level 2 caching</td>
                </tr>
                <tr>
                    <td><a href="http://repo1.maven.org/maven2/swarmcache/jars/" target="_blank">SwarmCache</a></td>
                    <td>SwarmCache caching product</td>
                    <td>1.0RC2</td>
                    <td>Required if you want to use SwarmCache for level 2 caching</td>
                </tr>
                <tr>
                    <td><a href="http://repo1.maven.org/maven2/c3p0/jars/" target="_blank">C3P0</a></td>
                    <td>C3P0 RDBMS connection pooling library</td>
                    <td>0.9.0+</td>
                    <td>Required if you are using an RDBMS datastore and want to use C3P0 for connection pooling</td>
                </tr>
                <tr>
                    <td><a href="http://repo1.maven.org/maven2/proxool/jars/" target="_blank">proxool</a></td>
                    <td>Proxool RDBMS connection pooling library</td>
                    <td>0.9.0RC3</td>
                    <td>Required if you are using an RDBMS datastore and want to use Proxool for connection pooling</td>
                </tr>
                <tr>
                    <td><a href="http://repo1.maven.org/maven2/commons-logging/jars/" target="_blank">commons-logging</a></td>
                    <td>Apache commons logging library</td>
                    <td>1.0+</td>
                    <td>Required if you are using an RDBMS datastore and want to use Proxool for connection pooling</td>
                </tr>
                <tr>
                    <td><a href="http://jolbox.com/bonecp/downloads/maven/com/jolbox/bonecp/" target="_blank">bonecp</a></td>
                    <td>BoneCP RDBMS connection pooling library</td>
                    <td>0.6.5</td>
                    <td>Required if you are using an RDBMS datastore and want to use BoneCP for connection pooling</td>
                </tr>
                <tr>
                    <td><a href="http://www.slf4j.org" target="_blank">SLF4J</a></td>
                    <td>SLF4J logging library</td>
                    <td>1.5.6</td>
                    <td>Required if you are using BoneCP for connection pooling</td>
                </tr>
                <tr>
                    <td><a href="http://www.oracle.com/technology/software/products/spatial/index.html" target="_blank">sdoapi</a></td>
                    <td>Oracle Spatial library</td>
                    <td>1.2+</td>
                    <td>Required if you want to persist Oracle spatial types</td>
                </tr>
                <tr>
                    <td>jta</td>
                    <td>JTA transaction API</td>
                    <td>1.0+</td>
                    <td>Required if you want to use JTA transactions</td>
                </tr>
                <tr>
                    <td>cache-api</td>
                    <td>Cache API</td>
                    <td>1.0+</td>
                    <td>Required if you want to use javax.cache L2 caching</td>
                </tr>
                <tr>
                    <td>validation-api</td>
                    <td>Bean validation API</td>
                    <td>1.0+</td>
                    <td>Required if you want to use bean validation (you also require a bean validation implementation)</td>
                </tr>
                </table>
                <br/>
            </subsection>

            <subsection name="Third Party Compatibility">
                <p>
                    We aim to make DataNucleus as compatible with related software as possible.
                    Here we give an overview of known compatibilities/problems
                </p>
                <table>
                    <tr>
                        <th>Software</th>
                        <th>Status</th>
                    </tr>
                    <tr>
                        <td>GraniteDS</td>
                        <td>Fully compatible from GraniteDS 2.0+</td>
                    </tr>
                    <tr>
                        <td>Scala</td>
                        <td>Fully compatible. If you want to use "SBT" you may benefit from the following links.
                            <a href="http://stackoverflow.com/questions/30218001/how-can-i-run-datanucleus-bytecode-enhancer-from-sbt">SBT and Enhancing</a>,
                            <a href="http://stackoverflow.com/questions/30401746/how-can-i-generate-a-metamodel-from-persistence-classes-with-datanucleus-and-sbt">SBT and MetaModel generation</a>
                        </td>
                    </tr>
                    <tr>
                        <td>Play Framework</td>
                        <td><a href="http://www.playframework.com/documentation/2.1.0/JavaJPA">Fully compatible with version 2.0 or later.</a>
                            <i>Version 1 of Play had a hardcoded Hibernate implementation which was obviously a bad idea 
                            when the whole point of having a persistence standard (JPA) is to allow portability.</i></td>
                    </tr>
                    <tr>
                        <td>GWT</td>
                        <td>Current versions of GWT (2+) ought to be able to serialise/deserialise any <b>detached</b>
                            JDO/JPA objects. Earlier GWT versions had a problem with a bytecode enhancement field of
                            type Object[] and there was a project
                            <a href="http://noon.gilead.free.fr/gilead/" target="_blank">GILEAD</a> that
                            attempted to handle this for various persistence solutions (and in version 1.3 will
                            have specific support for DataNucleus, already in Gilead SVN).
                            Also look at
                            <a href="http://groups.google.com/group/Google-Web-Toolkit-Contributors/browse_thread/thread/3c768d8d33bfb1dcseems" target="_blank">this</a>
                            and <a href="http://timepedia.blogspot.com/2009/04/google-appengine-and-gwt-now-marriage.html" target="_blank">this</a>.
                        </td>
                    </tr>
                    <tr>
                        <td>iReport v5</td>
                        <td>Fully compatible, but you could consider removing the following
                            <i>iReport-5.0.0/ireport/modules/ext/commons-dbcp-1.2.2.jar</i> and 
                            <i>iReport-5.0.0/ireport/modules/ext/*hive*</i> 
                            as they have been found by some to cause conflicts.
                        </td>
                    </tr>
                    <tr>
                        <td>Spring</td>
                        <td>DataNucleus is a fully compliant JDO/JPA implementation, so should work with anything that purports to support standards.</td>
                    </tr>
                    <tr>
                        <td>Wicket</td>
                        <td>Fully compatible. See <a href="https://github.com/tomhowe/wicket-spring-jdo">this</a> and <a href="https://github.com/tomhowe/wicket-spring-jdo-interfaces">this</a>
                            for tutorials with JDO, and follow <a href="http://www.jweekend.com/dev/LegUp">the general Wicket JPA guide</a> when using the JPA API.</td>
                    </tr>
                </table>
            </subsection>
        </section>
    </body>
</document>