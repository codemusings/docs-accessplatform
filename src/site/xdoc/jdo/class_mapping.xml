<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>JDO Class Mapping</title>
    </properties>

    <body>
        <section name="JDO : Class Mapping">
            <p>
                The first thing to decide when implementing your persistence layer is which classes are to be
                persisted.
                Let's take a sample class (<i>Hotel</i>) as an example
                We can define a class as persistable using either annotations in the class, or XML metadata.
            </p>
            <p>
                To achieve the above aim with XML metadata, we do this
            </p>
            <source><![CDATA[
<class name="Hotel">
    ...
</class>]]></source>
            <p>
                Alternatively, using <a href="annotations.html">JDO Annotations</a>, like this
            </p>
            <source>
@PersistenceCapable
public class Hotel
{
    ...
}</source>
            <p>See also :-</p>
            <ul>
                <li><a href="metadata_xml.html#class">MetaData reference for &lt;class&gt; element</a></li>
                <li><a href="annotations.html#PersistenceCapable">Annotations reference for @PersistenceCapable</a></li>
            </ul>

            <subsection name="Persistence-Aware Classes">
                <p>
                    With JDO persistence all classes that are persisted have to be identified in XML or annotations as
                    shown above. In addition, if any of your other classes <b>access the fields of these persistable 
                    classes directly</b> then these other classes should be defined as <i>PersistenceAware</i>. 
                    You do this as follows
                </p>
                <source><![CDATA[
<class name="MyClass" persistence-modifier="persistence-aware">
    ...
</class>]]></source>
                <p>
                    or with annotations
                </p>
                <source><![CDATA[
@PersistenceAware
public class MyClass
{
    ...
}]]></source>
                <p>See also :-</p>
                <ul>
                    <li><a href="annotations.html#PersistenceAware">Annotations reference for @PersistenceAware</a></li>
                </ul>
                <br/>
            </subsection>

            <subsection name="Read-Only">
                <img src="../images/nucleus_extension.gif" border="0" alt=""/>
                <p>
                    You can, if you wish, make a class <i>read-only</i>. This is a DataNucleus extension and you set
                    it as follows
                </p>
                <source><![CDATA[
<class name="MyClass">
    <extension vendor-name="datanucleus" key="read-only" value="true"/>]]></source>
                <p>
                    or with annotations
                </p>
                <source><![CDATA[
@PersistenceCapable
@Extension(vendorName="datanucleus", key="read-only", value="true")
public class MyClass
{
    ...
}]]></source>
                <br/>
            </subsection>

        </section>
	</body>
</document>