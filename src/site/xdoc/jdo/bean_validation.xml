<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>JDO Bean Validation</title>
    </properties>

    <body>
        <section name="JDO : Bean Validation">
            <img src="../images/nucleus_extension.gif" border="0" alt=""/>
            <p>
                The Bean Validation API (JSR0303) can be hooked up with JDO (DataNucleus extension) so that you have 
                validation of an objects values prior to persistence, update and deletion. To do this
            </p>
            <ul>
                <li>Put the <b>javax.validation</b> "validation-api" jar in your CLASSPATH, along with the
                Bean Validation implementation jar of your choice (Apache BVAL, Hibernate Validator, etc)</li>
                <li>Set the persistence property <i>datanucleus.validation.mode</i> to one
                    of <i>auto</i>, <i>none</i> (default), or <i>callback</i></li>
                <li>Optionally set the persistence property(s)
                    <i>datanucleus.validation.group.pre-persist</i>,
                    <i>datanucleus.validation.group.pre-update</i>,
                    <i>datanucleus.validation.group.pre-remove</i> to fine tune the behaviour (the default is
                    to run validation on pre-persist and pre-update if you don't specify these).</li>
                <li>Use JDO as you normally would for persisting objects</li>
            </ul>
            <p>
                To give a simple example of what you can do with the Bean Validation API
            </p>
            <source><![CDATA[
@PersistenceCapable
public class Person 
{
    @PrimaryKey
    @NotNull
    private Long id;

    @NotNull
    @Size(min = 3, max = 80)
    private String name;

    ...
}]]></source>
            <p>
                So we are validating that instances of the <i>Person</i> class will have an "id" that is not null
                and that the "name" field is not null and between 3 and 80 characters. If it doesn't validate then
                at persist/update an exception will be thrown.
            </p>
        </section>
    </body>
</document>