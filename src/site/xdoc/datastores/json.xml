<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>JSON Datastore</title>
    </properties>

    <body>
        <section name="JSON Datastores">
            <img src="../images/thirdparty/json.gif" border="0" alt=""/>
            <p>
                DataNucleus supports persisting/retrieving objects to/from JSON documents (using the 
                <a href="../../../plugins/store.json.html">datanucleus-json</a> plugin). 
                Simply specify your "connectionURL" as follows
            </p>
            <source>datanucleus.ConnectionURL=json:{url}</source>
            <p>
                replacing "{url}" with some URL of your choice (e.g "http://www.mydomain.com/somepath/").
                You then create your PMF/EMF as normal and use JDO/JPA as normal.
            </p>
            <p>
                Things to bear in mind with JSON usage :-
            </p>
            <ul>
                <li>Querying can be performed using JDOQL or JPQL. Any filtering/ordering will be performed
                        <b>in-memory</b></li>
                <li>Relations : A spreadsheet cannot store related objects directly, since each object is a 
                        row of a particular worksheet. DataNucleus gets around this by storing the String-form of 
                        the identity of the related object in the relation cell.</li>
            </ul>
            <br/>

            <subsection name="Mapping : HTTP Mapping">
                <p>
                    The persistence to JSON datastore is performed via HTTP methods. HTTP response codes are
                    used to validate the success or failure to perform the operations. The JSON datastore must
                    respect the following:
                </p>
                <table>
                	<tr>
                		<th>Method</th>
                		<th>Operation</th>
                		<th>URL format</th>
                		<th>HTTP response code</th>
                	</tr>
                	<tr>
                		<td>PUT</td>
                		<td>update objects</td>
                		<td>/{primary key}</td>
                		<td>HTTP Code 201 (created), 200 (ok) or 204 (no content)</td>
                	</tr>
                 	<tr>
                		<td>HEAD</td>
                		<td>locate objects</td>
                		<td>/{primary key}</td>
                		<td>HTTP 404 if the object does not exist</td>
                	</tr>
                 	<tr>
                		<td>POST</td>
                		<td>insert objects</td>
                		<td>/</td>
                		<td>HTTP Code 201 (created), 200 (ok) or 204 (no content)</td>
                	</tr>
                 	<tr>
                		<td>GET</td>
                		<td>fetch objects</td>
                		<td>/{primary key}</td>
                		<td>HTTP Code 200 (ok) or 404 if object does not exist</td>
                	</tr>
                 	<tr>
                		<td>GET</td>
                		<td>retrieve extent of classes (set of objects)</td>
                		<td>/</td>
                		<td>HTTP Code 200 (ok) or 404 if no objects exist</td>
                	</tr>
                 	<tr>
                		<td>DELETE</td>
                		<td>delete objects</td>
                		<td>/{primary key}</td>
                		<td>HTTP Code 202 (accepted), 200 (ok) or 204 (no content)</td>
                	</tr>
                </table>
                <br/>
            </subsection>

            <subsection name="Mapping : Persistent Classes">
                <table>
                	<tr>
                		<th>Metadata API</th>
                		<th>Extension Element Attachment</th>
                		<th>Extension</th>
                		<th>Description</th>
                	</tr>
                	<tr>
                		<td>JDO</td>
                		<td>/jdo/package/class/extension</td>
                		<td>url</td>
                		<td>Defines the location of the resources/objects for the class</td>
                	</tr>
                </table>
    
                <source><![CDATA[
<jdo>
    <package name="org.datanucleus.samples.models.company">
        <class name="Person" detachable="true">
            <extension vendor-name="datanucleus" key="url" value="/Person"/>
        </class>
    </package>
</jdo>]]></source>
                <p>
                    In this example, the <i>url</i> extension identifies the Person resources/objects as <i>/Person</i>.
                    The persistence operations will be relative to this path. e.g /Person/{primary key} will be
                    used for PUT (update), GET (fetch) and DELETE (delete) methods.
                </p>
                <br/>
            </subsection>

        </section>
    </body>
</document>