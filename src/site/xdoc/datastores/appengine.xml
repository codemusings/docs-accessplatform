<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>Google AppEngine/Datastore</title>
    </properties>

    <body>
        <section name="Google AppEngine/Datastore">
            <a href="http://appengine.google.com" target="_blank"><img src="../images/thirdparty/appengine.gif" border="0" alt="GAE"/></a>
            <p>
                DataNucleus supports persisting/retrieving objects to/from Google AppEngine/Datastore
                (using the <a href="http://code.google.com/p/datanucleus-appengine" target="_blank">datanucleus-appengine</a> 
                plugin). Simply specify your connection details as follows
            </p>
<source>datanucleus.ConnectionURL=appengine:</source>
            <p>
                <b>Version 3.0.x of the <i>datanucleus-appengine</i> plugin is for use with DataNucleus v3.2/v3.3</b> 
                (see SVN trunk of the GAE plugin).
            </p>
            <p>
                Once you have specified your connection details you then create your PMF/EMF as normal 
                and use JDO/JPA as normal. Things to bear in mind with AppEngine/Datastore usage :-
            </p>
            <ul>
                <li>Querying can be performed using JDOQL or JPQL. Some query constructs are evaluated in
                the datastore, and you can request that any others are handled in-memory.
                If you want queries to automatically evaluate unsupported constructs in-memory just set the
                persistence property <b>datanucleus.appengine.query.inMemoryWhenUnsupported</b>
                to "true"</li>
                <li>Relation Mode : by default all relations are <i>owned</i> meaning that when related
                objects are persisted they are owned by the original object and their "id" contains the
                Key of the owner object. You can set <b>datanucleus.appengine.relationDefault</b>
                to <i>unowned</i> and make all relations default to unowned, just like all other supported
                datastores</li>
            </ul>
            <br/>

            <subsection name="References">
                <p>
                    Some references that may be of some use
                </p>
                <ul>
                    <li><a href="http://datanucleus.blogspot.co.uk/2011/08/gaej-and-datanucleus-v3.html">GAE/J and DataNucleus v3 - Part 1</a></li>
                    <li><a href="http://datanucleus.blogspot.co.uk/2011/11/gaej-and-datanucleus-v3-part-2.html">GAE/J and DataNucleus v3 - Part 2</a></li>
                </ul>
            </subsection>
        </section>

    </body>
</document>