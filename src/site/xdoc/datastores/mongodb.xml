<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>MongoDB Datastores</title>
    </properties>

    <body>
        <section name="MongoDB Datastores">
            <img src="../images/thirdparty/mongodb.png" border="0" alt=""/>
            <p>
                DataNucleus supports persisting/retrieving objects to/from MongoDB datastores (using the 
                <a href="https://github.com/datanucleus/datanucleus-mongodb">datanucleus-mongodb</a> plugin, which utilises the
                Mongo Java driver). Simply specify your "connectionURL" as follows
            </p>
            <source>datanucleus.ConnectionURL=mongodb:[{server}][/{dbName}] [,{server2}[,server3}]]</source>
            <p>
                For example, to connect to a local server, with database called "myMongoDB"
            </p>
            <source>datanucleus.ConnectionURL=mongodb:/myMongoDB</source>
            <p>
                If you just specify the URL as <i>mongodb</i> then you have a local MongoDB datastore 
                called "DataNucleus", otherwise it tries to connect to the datastore <i>{dbName}</i> at 
                <i>{server}</i>. The multiple <i>{server}</i> option allows you to run against MongoDB 
                <a href="http://www.mongodb.org/display/DOCS/Replica+Sets">replica sets</a>. 
                You then create your PMF/EMF as normal and use JDO/JPA as normal.
            </p>
            <p>
                The jars required to use DataNucleus MongoDB persistence are <i>datanucleus-core</i>,
                <i>datanucleus-api-jdo</i>/<i>datanucleus-api-jpa</i>, <i>datanucleus-mongodb</i>
                and <i>mongo-java-driver</i>
            </p>
            <p>
                There are tutorials available for use of DataNucleus with MongoDB 
                <a href="../jdo/guides/tutorial_mongodb.html">for JDO</a> and
                <a href="../jpa/guides/tutorial_mongodb.html">for JPA</a>
            </p>
            <p>
                Things to bear in mind with MongoDB usage :-
            </p>
            <ul>
                <li>Creation of a PMF/EMF will create a <i>MongoClient</i>. This will be closed then the PMF/EMF is closed.</li>
                <li>Creation of a PM/EM and performing an operation will obtain a <i>DB</i> object from the <i>MongoClient</i>.
                    This is pooled by the MongoClient so is managed by MongoDB. Closing the PM/EM will stop using that <i>DB</i></li>
                <li>You can set the number of connections per host with the persistence property <b>datanucleus.mongodb.connectionsPerHost</b></li>
                <li>Querying can be performed using JDOQL or JPQL. 
                    Some components of a filter are handled in the datastore, and the remainder in-memory.
                    Currently any expression of a field (in the same table), or a literal are handled in-datastore, 
                    as are the operators &amp;&amp;, ||, &gt;, &gt;=, &lt;, &lt;=, ==, and !=.</li>
                <li>If you want a query to be runnable on a slave MongoDB instance then you should set the query extension (JDO) / hint (JPA) 
                    <b>slave-ok</b> as <i>true</i>, and when executed it can be run on a slave instance.</li>
                <li>All objects of a class are persisted to a particular "document" (specifiable with the "table" in metadata), 
                    and a field of a class is persisted to a particular "field" ("column" in the metadata).</li>
                <li>Relations : DataNucleus stores the id of the related object(s) in a field of the owning object.
                    When a relation is bidirectional both ends of the relation will store the relation information.</li>
                <li><a href="http://www.mongodb.org/display/DOCS/Capped+Collections">Capped collections</a> : 
                    you can specify the extension metadata key <i>mongodb.capped.size</i>
                    as the number of bytes of the size of the collection for the class in question.</li>
                <li>If you want to specify the max number of connections per host with MongoDB then set the persistence property
                    <b>datanucleus.mongodb.connectionsPerHost</b></li>
                <li>If you want to specify the MongoDB <i>threadsAllowedToBlockForConnectionMultiplier</i>, then set the persistence property
                    <b>datanucleus.mongodb.threadsAllowedToBlockForConnectionMultiplier</b></li>
            </ul>

            <subsection name="Mapping : Embedded Persistable fields">
                <p>
                    When you have a field in a class that is of a persistable type you sometimes want to store
                    it with the owning object. In this case you can use <a href="../jdo/orm/embedded.html#PC">JDO</a>/
                    <a href="../jpa/orm/embedded.html#PC">JPA</a> embedding of the field. 
                    DataNucleus offers two ways of performing this embedding
                </p>
                <ul>
                    <li>The default is to store the object in the field as a sub-document (nested) of
                            the owning document. Similarly if that sub-object has a field of a persistable type
                            then that can be further nested.</li>
                    <li>The alternative is to store each field of the sub-object as a field of the
                            owning document (flat embedding). Similarly if that sub-object has a field of a
                            persistable type then it can be flat embedded in the same way</li>
                </ul>
                <source><![CDATA[
@PersistenceCapable
public class A
{
    @Embedded
    B b;

    ...
}]]></source>
                <p>
                    This example uses the default embedding, using a nested document within the owner document, 
                    and could look something like this
                </p>
                <source><![CDATA[
{ "name" : "A Name" ,
  "id" : 1 ,
  "b" : { "name" : "B name" ,
          "description" : "the description"}
}]]></source>
                <p>
                    The alternative would be
                </p>
                <source><![CDATA[
@PersistenceCapable
public class A
{
    @Embedded
    @Extension(vendorName="datanucleus", key="nested", value="false")
    B b;

    ...
}]]></source>
                <p>
                    and this will use <i>flat embedding</i>, looking something like this
                </p>
                <source><![CDATA[
{ "name" : "A Name" ,
  "id" : 1 ,
  "b_name" : "B name" ,
  "b_description" : "the description"
}]]></source>
                <br/>
            </subsection>

            <subsection name="Mapping : Embedded Collection elements">
                <p>
                    When you have a field in a class that is of a Collection type you sometimes want to store
                    it with the owning object. In this case you can use <a href="../jdo/orm/embedded.html#Collection">JDO</a>/
                    <a href="../jpa/orm/embedded.html#Collection">JPA</a> embedding of the field.
                    So if we have
                </p>
                <source><![CDATA[
@PersistenceCapable
public class A
{
    @Element(embedded="true")
    Collection<b> bs;

    ...
}]]></source>
                <p>
                    and would look something like this
                </p>
                <source><![CDATA[
{ "name" : "A Name" ,
  "id" : 1 ,
  "bs" :
      [
        { "name" : "B Name 1" ,
          "description" : "desc 1"} ,
        { "name" : "B Name 2" ,
          "description" : "desc 2"} ,
        { "name" : "B Name 3" ,
          "description" : "desc 3"}
      ]
}]]></source>
                <br/>
            </subsection>

            <subsection name="References">
                <p>
                    Below are some references using this support
                </p>
                <ul>
					<li><a href="http://sasajovancic.blogspot.com/2011/06/use-jpa-with-mongodb-and-datanucleus.html">Sasa Jovancic - Use JPA with MongoDb and Datanucleus</a></li>
				</ul>
			</subsection>
        </section>
    </body>
</document>
